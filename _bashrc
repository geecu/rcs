alias resource="source ~/.rcs/_sf"
alias reprofile="vim ~/.rcs/_bashrc; source ~/.rcs/_bashrc; resource"

alias rerc="cd ~/.rcs; gpl; source ~/.rcs/_bashrc; resource"

alias fixpermissions="chmod a+w ~/.viminfo"

alias v="ls -la"

alias big="du -d 1 -h -x | egrep '[0-9]M|[0-9]G' | sort -nr"
alias qsort="du -sh * | sort -nr"
alias qq="big"

alias gs="git status"
alias gsu="git submodule"
alias gsuu="git submodule update"
alias ga="git add"
alias gb="git branch"
alias gp="git push"
alias gpl="git pull"
alias gl="git log"
alias gd="git diff"
alias gsh="git show"
alias gm="git commit -a -m"
alias gcl="git clone"
alias gi="git clone --bare --no-hardlinks"
alias gc="git checkout"
alias ggc="git gc"
alias gcm="git checkout master"
alias gr="git remote -v"
alias gt="git tag"

function wgrep() {
    find ./ -iregex .+\.php$ -type f -print | xargs grep "$@" ;
}

function wweb() {
    if [ -z "${WWEB_DIR}" ]; then
        _wweb_not_set_warning
        return 1
    fi

    cd ${WWEB_DIR}/$@
}

function _wweb_completion {
    if [ -z "${WWEB_DIR}" ]; then
        _wweb_not_set_warning
        return 1
    fi

    local cur prev names
    COMPREPLY=()

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    names=$(for x in `ls -1 ${WWEB_DIR}`; do echo ${x} ; done )

    COMPREPLY=( $(compgen -W "${names}" -- ${cur} ) )
    return 0
}
function _wweb_not_set_warning {
    echo WWEB_DIR env variable is not set!!! Add export WWEB_DIR=/path_to_your_root_www_dir to bashrc
}
complete -F _wweb_completion wweb

#thanks to http://www.earthinfo.org/linux-disk-usage-sorted-by-size-and-human-readable/
alias duf='du -sk * | sort -n | perl -ne '\''($s,$f)=split(m{\t});for (qw(K M G)) {if($s<1024) {printf("%.1f",$s);print "$_\t$f"; last};$s=$s/1024}'\' 
